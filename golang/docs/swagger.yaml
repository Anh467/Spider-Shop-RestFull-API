basePath: /api/v1
definitions:
  entities.UserCreate:
    properties:
      account:
        type: string
      birth:
        type: string
      gender:
        type: string
      mail:
        type: string
      name:
        type: string
      password:
        type: string
      userid:
        type: integer
    type: object
  entities.UserGet:
    properties:
      account:
        type: string
      birth:
        type: string
      created_at:
        type: string
      expenditure:
        type: string
      gender:
        type: string
      image:
        type: string
      mail:
        type: string
      name:
        type: string
      numorder:
        type: integer
      phone:
        type: string
      role:
        type: string
      updated_at:
        type: string
      userid:
        type: integer
    type: object
  entities.UserJWTModel:
    properties:
      account:
        type: string
      birth:
        type: string
      gender:
        type: string
      mail:
        type: string
      name:
        type: string
      token:
        type: string
      userid:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Spider shop Restfull API using Gin Framework, Gorm orm and other libraries
  title: SpiderShop-Restfull-API yeah
  version: "1.0"
paths:
  /register:
    post:
      consumes:
      - application/json
      description: user can able create new account
      parameters:
      - description: User object that needs to be added
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.UserJWTModel'
        "400":
          description: Bad Request
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "501":
          description: Not Implemented
          schema:
            type: string
      summary: post users
      tags:
      - authen
  /users:
    get:
      consumes:
      - application/json
      description: this function must have permission administrator
      parameters:
      - description: Limit the number of users to return
        in: query
        name: limit
        type: integer
      - description: Offset the list of users
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.UserGet'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: get users
      tags:
      - users
swagger: "2.0"
