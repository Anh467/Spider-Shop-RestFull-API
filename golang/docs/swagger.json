{
    "swagger": "2.0",
    "info": {
        "description": "Spider shop Restfull API using Gin Framework, Gorm orm and other libraries",
        "title": "SpiderShop-Restfull-API yeah",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/asignin": {
            "post": {
                "description": "Guess can sign in to have a user's right",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Signin",
                "parameters": [
                    {
                        "description": "Data of user's credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.UserCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.UserJWTModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "user can able create new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authen"
                ],
                "summary": "post users",
                "parameters": [
                    {
                        "description": "User object that needs to be added",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.UserJWTModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "this function must have permission administrator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of users to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset the list of users",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.UserGet"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.UserCreate": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "birth": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "entities.UserCredential": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "entities.UserGet": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "birth": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expenditure": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numorder": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "entities.UserJWTModel": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "birth": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        }
    }
}